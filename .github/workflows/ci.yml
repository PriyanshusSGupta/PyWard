name: CI / Pytest and PR Comment

# Run this workflow whenever a PR is opened, synchronized, or reopened
on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  pull-requests: write

jobs:
  test-and-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the *fork’s* code for testing
        uses: actions/checkout@v4
        with:
          # By default, pull_request_target checks out the base repo.
          # We want to check out the head (fork) so pytest runs on the contributor’s code:
          ref: ${{ github.event.pull_request.head.sha }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov colorama

      - name: Run pytest and capture output
        id: pytest
        continue-on-error: true
        run: |
          pytest --cov=./ --cov-report=term-missing > pytest_output.txt

      - name: Comment test results on PR
        if: always()
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const fs = require('fs');
            const output = fs.readFileSync('pytest_output.txt', 'utf8');
            const testOutcome = '${{ steps.pytest.outcome }}';
            const statusEmoji = testOutcome === 'success' ? '✅' : '❌';
            const statusTitle = testOutcome === 'success' ? 'All tests passed' : 'Some tests failed';

            const body = [
              `### ${statusEmoji} Pytest Results: ${statusTitle}`,
              "",
              "<details><summary>Click to see full test and coverage report</summary>",
              "",
              "```term",
              output,
              "```",
              "</details>"
            ].join("\n");

            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
