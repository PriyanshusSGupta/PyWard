name: CI / pytest + coverage + PR comment

on:
  pull_request_target:
    types: [opened, synchronize, reopened]

permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  test-and-comment:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout PR‚Äôs HEAD
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.pull_request.head.ref }}
          repository: ${{ github.event.pull_request.head.repo.full_name }}

      - name: Set up Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pytest pytest-cov colorama

      - name: Run pytest + coverage and capture output
        id: run-tests
        run: |
          pytest --cov=./ --cov-report=term-missing > pytest_output.txt || true
          echo "report<<EOF" >> "$GITHUB_OUTPUT"
          cat pytest_output.txt >> "$GITHUB_OUTPUT"
          echo "EOF" >> "$GITHUB_OUTPUT"

      - name: Add ‚Äúready for review‚Äù label
        if: ${{ steps.run-tests.conclusion == 'success' }}
        uses: actions-ecosystem/action-add-labels@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          labels: |
            Ready for Review

      - name: Comment test & coverage results on PR
        if: always()
        uses: actions/github-script@v6
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const report = `\`\`\`\n${{ steps.run-tests.outputs.report }}\n\`\`\``;
            const body = [
              "### üß™ Pytest + Coverage Results",
              "",
              report
            ].join("\n");
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body
            });
